name: ESLint

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  eslint:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install ESLint
        run: |
          npm install eslint @microsoft/eslint-formatter-sarif@3.1.0

      - name: Run ESLint
        env:
          SARIF_ESLINT_IGNORE_SUPPRESSED: "true"
        run: |
          npx eslint "${{ github.workspace }}"
            --config .eslintrc.js
            --ext .js,.jsx,.ts,.tsx
            --format @microsoft/eslint-formatter-sarif
            --output-file "${{ github.workspace }}/eslint-results.sarif"
        continue-on-error: true

      - name: Run ESLint and Calculate Score
        run: |
          # Install ESLint
          npm install eslint
      
          # Run ESLint and output to JSON
          npx eslint . --ext .js,.ts --format json --output-file eslint-results.json
      
          # Calculate score from JSON output
          echo "Calculating score..."
          SCORE=$(node -e "
            const results = require('./eslint-results.json');
            const totalErrors = results.reduce((sum, file) => sum + file.errorCount, 0);
            const totalWarnings = results.reduce((sum, file) => sum + file.warningCount, 0);
            
            // Adjust weights as needed (errors count more than warnings)
            const errorWeight = 2;
            const warningWeight = 1;
            const totalFiles = results.length;
            
            // Max possible issues (adjust multiplier as needed)
            const maxIssues = totalFiles * 5;
            
            // Calculate score (0-100%)
            const score = Math.max(0, 100 - ((totalErrors * errorWeight + totalWarnings * warningWeight) / maxIssues * 100));
            console.log(score.toFixed(1));
          ")
      
          echo "ESLint Score: $SCORE%"
          echo "SCORE=$SCORE" >> $GITHUB_ENV

      - name: Debug - Verify SARIF file
        run: |
          ls -la
          if [ -f "eslint-results.sarif" ]; then
            echo "✅ SARIF file exists."
          else
            echo "❌ SARIF file NOT FOUND."
            exit 1  # Fail the workflow if missing
          fi

      - name: Upload SARIF results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "${{ github.workspace }}/eslint-results.sarif"
